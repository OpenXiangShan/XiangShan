# This file describes the GitHub Actions workflow for continuous integration of XS Core.
name: EMU Test

on:
  push:
    branches: [ master, southlake ]
  pull_request:
    branches: [ master, southlake ]

jobs:
  generate-verilog:
    runs-on: bosc
    continue-on-error: false
    name: Generate Verilog
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: set env
        run: |
          echo "HEAD_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "WAVE_HOME=/nfs/home/share/southlake-release/${HEAD_SHA}" >> $GITHUB_ENV
      - name: clean up
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --clean
          rm -rf $GITHUB_WORKSPACE/bosc_XSTop-Release*
          mkdir -p $WAVE_HOME
      - name: generate verilog file
        run:
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --generate
      - name: check verilog
        run:
          python3 $GITHUB_WORKSPACE/.github/workflows/check_verilog.py build/XSTop.v
      - name: release
        run: |
          python3 scripts/parser.py XSTop --xs-home $GITHUB_WORKSPACE \
            --config DefaultConfig --prefix bosc_                     \
            --sram-replace --mbist-scan-replace
          tar -czf $WAVE_HOME/release-${HEAD_SHA}.tar.gz bosc_XSTop-Release*

  generate-fpga-verilog:
    runs-on: bosc
    continue-on-error: false
    name: Generate Verilog for NANHU FPGA
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: set env
        run: |
          echo "HEAD_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "WAVE_HOME=/nfs/home/share/southlake-release/${HEAD_SHA}" >> $GITHUB_ENV
      - name: clean up
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --clean
          rm -rf $GITHUB_WORKSPACE/XSTop-Release*
          mkdir -p $WAVE_HOME
      - name: generate verilog file
        run: |
          sed -i -e "s/AlwaysBasicDiff: Boolean = true/AlwaysBasicDiff: Boolean = false/g" \
            $GITHUB_WORKSPACE/src/main/scala/xiangshan/Parameters.scala
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py \
            --generate --nanhu --config FPGAConfig
      - name: release
        run: |
          python3 scripts/parser.py XSTop --xs-home $GITHUB_WORKSPACE \
            --config FPGAConfig --no-extra-files
          tar -czf $WAVE_HOME/release-${HEAD_SHA}-fpga.tar.gz XSTop-Release*

  generate-sim-release:
    runs-on: bosc
    continue-on-error: false
    name: Generate release Verilog of SimTop
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: set env
        run: |
          echo "HEAD_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "WAVE_HOME=/nfs/home/share/southlake-release/${HEAD_SHA}" >> $GITHUB_ENV
      - name: clean up
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --clean
          rm -rf $GITHUB_WORKSPACE/SimTop-Release*
          mkdir -p $WAVE_HOME
      - name: generate release verilog for SimTop
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --sim-release --config DefaultConfig
      - name: release
        run:
          tar -czf $WAVE_HOME/release-${HEAD_SHA}-sim-wrapper.tar.gz SimTop-Release*

  default-emu:
    runs-on: bosc
    continue-on-error: false
    timeout-minutes: 600
    name: Test Default-EMU
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: set env
        run: |
          echo "HEAD_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "WAVE_HOME=/nfs/home/share/southlake-release/${HEAD_SHA}" >> $GITHUB_ENV
      - name: clean up
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --clean
          mkdir -p $WAVE_HOME
      - name: Build Default-EMU
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py \
            --build --threads 8
      - name: EMU - riscv-tests
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py \
            --wave-dump $WAVE_HOME --threads 8 --numa    \
            --ci riscv-tests 2> /dev/zero
      - name: EMU - CoreMark
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py \
            --wave-dump $WAVE_HOME --threads 8 --numa    \
            --ci coremark 2> perf.log
          cat perf.log | sort
      - name: EMU - microbench
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py \
            --wave-dump $WAVE_HOME --threads 8 --numa    \
            --ci microbench 2> perf.log
          cat perf.log | sort

  release-emu:
    runs-on: bosc
    continue-on-error: false
    timeout-minutes: 600
    name: Test Release Default-EMU
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: set env
        run: |
          echo "HEAD_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV
          echo "WAVE_HOME=/nfs/home/share/southlake-release/${HEAD_SHA}" >> $GITHUB_ENV
      - name: clean up
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --clean
          mkdir -p $WAVE_HOME
      - name: Build Release Default-EMU
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py \
            --build --threads 8 --release
      - name: EMU - Linux
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py \
            --wave-dump $WAVE_HOME --threads 8 --numa    \
            --ci linux-hello 2> perf.log
          cat perf.log | sort

  simv-basics:
    runs-on: eda
    continue-on-error: false
    timeout-minutes: 600
    name: SIMV - Basics
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: set env
        run: |
          export HEAD_SHA=${{ github.run_number }}
          echo "NEMU_HOME=/nfs/home/share/ci-workloads/NEMU" >> $GITHUB_ENV
          echo "AM_HOME=/nfs/home/share/ci-workloads/nexus-am" >> $GITHUB_ENV
          echo "PERF_HOME=/nfs/home/ci-runner/xs-perf/${HEAD_SHA}" >> $GITHUB_ENV
          echo "WAVE_HOME=/nfs/home/ci-runner/xs-wave/${HEAD_SHA}" >> $GITHUB_ENV
          mkdir -p /nfs/home/ci-runner/xs-perf/${HEAD_SHA}
          mkdir -p /nfs/home/ci-runner/xs-wave/${HEAD_SHA}
      - name: clean up
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --clean
      - name: Remote Connection Test
        run: |
          ssh -tt 172.28.10.101 "echo test-ok"
      - name: Generate Verilog for VCS
        run: |
          python3 $GITHUB_WORKSPACE/scripts/xiangshan.py --vcs-gen --release
      - name: Build SIMV on Remote
        run: |
          ssh -tt 172.28.10.101 "python3 `echo $GITHUB_WORKSPACE`/scripts/xiangshan.py --vcs-build --release"
      # - name: Basic Test - cputest
      #   run: |
      #     ssh -tt 172.28.10.101 "python3 `echo $GITHUB_WORKSPACE`/scripts/xiangshan.py --ci-vcs cputest --am=/nfs/home/share/ci-workloads/nexus-am/" 2> /dev/zero
      # - name: Simple Test - CoreMark
      #   run: |
      #     ssh -tt 172.28.10.101 "python3 `echo $GITHUB_WORKSPACE`/scripts/xiangshan.py --ci-vcs coremark --am=/nfs/home/share/ci-workloads/nexus-am/ --timeout 1800" 2> /dev/zero
      - name: System Test - Linux
        run: |
          ssh -tt 172.28.10.101 "python3 `echo $GITHUB_WORKSPACE`/scripts/xiangshan.py --ci-vcs linux-hello --timeout 7200" 2> /dev/zero
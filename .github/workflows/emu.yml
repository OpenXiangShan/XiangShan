# This file describes the GitHub Actions workflow for continuous integration of XS Core.
name: EMU Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  generate-verilog:
    runs-on: self-hosted
    name: Generate Verilog
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Check Wiring
        run: bash .github/workflows/check-usage.sh "BoringUtils" $GITHUB_WORKSPACE
      - name: set env
        run: |
          echo "NEMU_HOME=/home/ci-runner/xsenv/NEMU" >> $GITHUB_ENV
          echo "NOOP_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      - name: generate verilog file
        run:
          make verilog SIM_ARGS=--dual-core
  emu-basics:
    runs-on: self-hosted
    name: EMU - Basics
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set env
        run: |
          echo "NEMU_HOME=/home/ci-runner/xsenv/NEMU" >> $GITHUB_ENV
          echo "NOOP_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "RVTEST_HOME=/home/ci-runner/xsenv/riscv-tests" >> $GITHUB_ENV
          echo "AM_HOME=/home/ci-runner/xsenv/nexus-am" >> $GITHUB_ENV
      - name: Build EMU
        run:
          make ./build/emu SIM_ARGS=--disable-log NEMU_HOME=$NEMU_HOME NOOP_HOME=$NOOP_HOME -j220 EMU_THREADS=8
      - name: Basic Test - cputest
        run: |
          CPU_TEST_DIR=$AM_HOME/tests/cputest
          echo $CPU_TEST_DIR
          ret=0
          for test in $(ls $CPU_TEST_DIR/tests)
          do
              t=${test%.c}
              echo $t
              numactl -m 1 -C 64-75 make -C $CPU_TEST_DIR ALL=$t ARCH=riscv64-noop AM_HOME=$AM_HOME NEMU_HOME=$NEMU_HOME NOOP_HOME=$NOOP_HOME run | grep "HIT GOOD TRAP"
              if [[ $? != 0 ]];
              then
                  echo $t fail
                  ret=1
              fi
          done
          exit $ret
      - name: Basic Test - riscv-tests
        run: |
          numactl -m 1 -C 64-75 make -C $RVTEST_HOME/isa/ SUITES+=rv64ui SUITES+=rv64um SUITES+=rv64ua SUITES+=rv64uf SUITES+=rv64ud NEMU_HOME=$NEMU_HOME NOOP_HOME=$NOOP_HOME noop_run
      - name: Simple Test - microbench
        run: |
          numactl -m 1 -C 64-75 make -C $AM_HOME/apps/microbench ARCH=riscv64-noop AM_HOME=$AM_HOME NEMU_HOME=$NEMU_HOME NOOP_HOME=$NOOP_HOME mainargs=test run 2> perf.log
          ret=${PIPESTATUS[0]}
          cat perf.log | sort
          exit $ret
      - name: Simple Test - CoreMark
        run: |
          numactl -m 1 -C 64-75 make -C $AM_HOME/apps/coremark ARCH=riscv64-noop AM_HOME=$AM_HOME NEMU_HOME=$NEMU_HOME NOOP_HOME=$NOOP_HOME run 2> perf.log
          ret=${PIPESTATUS[0]}
          cat perf.log | sort
          exit $ret
      - name: System Test - Linux
        run: |
          numactl -m 1 -C 64-75 make emu IMAGE=/home/ci-runner/xsenv/workloads/linux-hello/bbl.bin 2> perf.log
          ret=${PIPESTATUS[0]}
          cat perf.log | sort
          exit $ret
      - name: Floating-point Test - povray
        run: |
          numactl -m 1 -C 64-75 make emu IMAGE=/home/ci-runner/xsenv/workloads/povray/_3400001000_.gz EMU_ARGS="-I 5000000" 2> perf.log
          ret=${PIPESTATUS[0]}
          cat perf.log | sort
          exit $ret
  emu-performance:
    runs-on: self-hosted
    name: EMU - Performance
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Set env
        run: |
          echo "NEMU_HOME=/home/ci-runner/xsenv/NEMU" >> $GITHUB_ENV
          echo "NOOP_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "DRAMSIM3_HOME=/home/ci-runner/xsenv/DRAMsim3" >> $GITHUB_ENV
      - name: Build EMU
        run:
          make ./build/emu SIM_ARGS=--disable-log NEMU_HOME=$NEMU_HOME NOOP_HOME=$NOOP_HOME DRAMSIM3_HOME=$DRAMSIM3_HOME -j220 EMU_THREADS=16 WITH_DRAMSIM3=1
      - name: SPEC06 Test - mcf
        run: |
          numactl -m 1 -C 64-83 make emu IMAGE=/home/ci-runner/xsenv/workloads/mcf/_2550001000_.gz EMU_ARGS="-I 5000000" 2> perf.log
          ret=${PIPESTATUS[0]}
          cat perf.log | sort
          exit $ret
      - name: SPEC06 Test - xalancbmk
        run: |
          numactl -m 1 -C 64-83 make emu IMAGE=/home/ci-runner/xsenv/workloads/xalancbmk/_6600001000_.gz EMU_ARGS="-I 5000000" 2> perf.log
          ret=${PIPESTATUS[0]}
          cat perf.log | sort
          exit $ret
      - name: SPEC06 Test - gcc
        run: |
          numactl -m 1 -C 64-83 make emu IMAGE=/home/ci-runner/xsenv/workloads/gcc/_1250001000_.gz EMU_ARGS="-I 5000000" 2> perf.log
          ret=${PIPESTATUS[0]}
          cat perf.log | sort
          exit $ret
      - name: SPEC06 Test - namd
        run: |
          numactl -m 1 -C 64-83 make emu IMAGE=/home/ci-runner/xsenv/workloads/namd/_4850001000_.gz EMU_ARGS="-I 5000000" 2> perf.log
          ret=${PIPESTATUS[0]}
          cat perf.log | sort
          exit $ret

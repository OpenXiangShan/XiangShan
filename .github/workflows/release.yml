name: Release Jobs

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-xsdev-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: init
        run: make init

      - uses: docker/metadata-action@v5
        id: metadata
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/xsdev
          tags: |
            master
          labels: |
            maintainer=${{ github.repository_owner }}

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

  build-xspdb:
    runs-on: bosc
    container: ghcr.io/openxiangshan/xspdb:build-latest
    steps:
      - uses: actions/checkout@v4
      - name: set env
        run: |
          echo "NOOP_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
      - name: submodule init
        run: make init
      - name: setup mill
        uses: jodersky/setup-mill@v0.3.0
        with:
          mill-version: 0.12.3
      - name: build and test XSPdb 
        run: |
          make pdb
          make pdb-test
      - name: upload XiangShan binary
        uses: actions/cache@v3
        with:
          key: build-xspdb
          path: build/xspdb/
          restore-keys: |
            build-xspdb

  release-xspdb:
    runs-on: bosc
    if: github.event.pull_request.merged == true
    container: ghcr.io/openxiangshan/xspdb:build-latest
    steps:
      - uses: actions/checkout@v4
      - name: set env
        run: |
          echo "NOOP_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV
          echo "PDB_HOME=${GITHUB_WORKSPACE}/build/xspdb" >> $GITHUB_ENV
          FILE_TIME=$(date +%Y%m)
          FILE_SHA=$(git rev-parse --short HEAD)
          echo "FILE_NAME=XSPdb-${FILE_TIME}-${FILE_SHA}.tar.bz2" >> $GITHUB_ENV
      - name: download XiangShan binary
        uses: actions/cache@v3
        with:
          key: build-xspdb
          path: build/xspdb 
      - name: archive XSPdb
        run: |
          mkdir -p ${{ env.PDB_HOME }}/XSPdb 
          make package-pdb
          mv ${{ env.PDB_HOME}}/XSPdb.tar.bz2 "${{ env.PDB_HOME }}/${{ env.FILE_NAME }}"
      - name: upload xspdb
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.FILE_NAME }}
          path: build/xspdb/${{ env.FILE_NAME }}
